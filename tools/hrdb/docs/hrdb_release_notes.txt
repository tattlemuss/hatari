hrdb Release Notes
==================

v0.009 (July 2024)

- Hatari
  - Update code to Hatari version 2.5.0
  - (hrdb only) Add Vars for TOSStart and TOSEnd addresses.

- General
  - Added a "Run to RAM" command. Makes it easier to exit TOS calls. Requested by @troed.
  - Added Ctrl+U <key> sequences for all the Run To... options.
	 e.g. "Ctrl+U V" performs "run to next VBL"
         - Added "Cold Reset" menu option.
  - Added a protocol check between hrdb and Hatari, to prevent accidental user mismatches.
  - Switched Breakpoints and Profile windows to use QTreeView.
      This looks much nicer and more compact.
  - Fixed auto-complete of symbols when active program is changed multiple times.

- Graphics inspector
  - Added support for STE line-padding register.
  - Switched the width of the view to be a number of bytes, rather than "blocks
      plus padding" approach.
  - "Use Register" option for formatting is now part of the Format combo box,
      rather than a separate tickbox.
  - Add 1BPP (byte-per-pixel) format support, useful for visualising buffer data.
  - Fix: Correctly use black & white palette in mono resolution. Reported by @troed.

- Memory Window
  - Added binary values in tooltips. Request from TheNameOfTheGame.
  - Added "Search..." as context menu option.
  - Added "Write to File..." context menu option to save binary data.

- Disassembly Window
  - Added "Search..." as context menu option.
  - Added annotation of trap calls.
      i.e. names of GemDOS/Xbios/Bios calls will be displayed as a comment.
      Currently this only identifies calls of the form "move.w #xx,-(a7) ; trap #yy"
      Requested by @troed.
  - Added annotation of Line-A commands.
      e.g. "dc.w $a000" will show the comment "linea_init"

- Register Window
  - TOS Annotations: show the trap name in the Register window.
      This is only flagged by Hatari at the point where the trap #1 instruction
      is about to be called, not during the lifetime of the trap, so its
      value is limited.


v0.008 (August 2023)

- Graphics Inspector
  - Added overlay for 16-pixel grid, register address positions, and a "zoom"
    overlay. These are available from the right-click/context menu.
  - Allow width up to 80 chunks to support 1280 mode. This enables previewing of
    the 1280x200 video mode created by running the Shifter in mono with the GLUE
    in colour. (request from Troed/SYNC)
  - Added Ctrl+Space shortcut for context menu.
  - Show memory address(es) of pixel under mouse pointer (suggestion by ggn/KÃœA)
    This address can also be sent to other windows (e.g. Memory) with the
    right-click/context menu.
  - Bug fix: Graphics Inspector didn't read $ff8260 cleanly in all cases.
      This resulted in the mode being incorrectly detected as "1-Bitplane"
      if any bits other than 0 and 1 were set. This happened sometimes with
      EmuTOS.

- Memory Window
  - Added search feature on Ctrl+F. Search supports hex or text, with case
    sensitivity.
  - Added selection of row widths of 4, 8, 16, 32 or 64 bytes, or auto-sizing
    based on the visible window width.
  - Window label shows the address of the active editing cursor.
    (request from zChris)
  - Fix tooltip crash bug when viewing the first byte in the window if window
    address is set to an odd value.
  - Added Ctrl+Space shortcut for context menu.
  - Large internal rewrite for stability.

- Launch Dialog
  - Added "Fast Launch" to run Hatari with --fast-forward until selected .prg
    is about to start, when it reverts to normal speed.
  - Added "Program Breakpoint" breakpoint option, to set a breakpoint automatically
    at a program label or other condition, for focussed automatic debugging.

- Disassembly Window
  - Supported decoding of 68020 and 68030 instructions (except for floating-
    point co-processor instructions).
  - Added search feature on Ctrl+F. Search supports hex or text, with case
    sensitivity.
  - Added Ctrl+Space shortcut for context menu.
  - Fixed 68000 disassembly of operands of mode "Address Register Indirect with
    Index" where the index register is A0-A7. Reported by Martin Sedlak.

- Register Window
  - Added display of 68020 and 68030 register values when appropriate, including
    flag breakdown of the Cache Control Register.

- Breakpoints Window
  - Fixed "Trace" flag when creating breakpoints.
  - Removed unnecessary columns from display.

- Console Window
  - Fixed bug on Windows where Hatari's output would not update properly.

- General
  - Base Hatari build version is still 2.4.1 release.
  - New shortcut Ctrl+Shift+U to cycle the "Run Until..." mode.
  - Add application window icon.
  - Docked and tabbed windows now appear correctly when using Alt+ shortcuts to
    switch to them.
  - Add shortcuts for nearly all windows: Alt+P for Profile Window, Alt+C for
    Console Window, Alt+2/3/4 for Memory Windows 2/3/4.
  - Symbol system now supports comments for each label. Comments are added for the
    internal hardware register addresses, low-memory vectors and TOS variables.
  - Bug fix: crash when using the Hatari "number base" with anything other than 10.
  - Launch dialog: Fix the resize behaviour so the last combo doesn't stretch.
  - Added support Windows file names in breakpoint options
  - Bug fix: correctly triggers fast-forward from the startup debugger script
     when a separate config file is specified.


v0.007 (August 2022)

- Profile Window
  - New view to display elapsed instructions and cycles. Can group by symbols or
    blocks of 64/256/1024/4096 bytes.

- Disassembly Window
  - Added view of used instructions/cycles when profiling is enabled.
  - Added "Set PC to here" right-click menu option.
  - Fixed decoding of EXG operands.
  - Fixed decoding of xx(pc) effective addresses in MOVEM instructions.
  - Added support for optional display of relative offsets as hexadecimal.
    Thanks to tIn/Newline for providing this patch!
  - Tweaked mousewheel scrolling after suggestions from Rati/OVR

- Hardware Window
  - Added display of palette colours.
  - Fixed bug in display of Endmasks in the Blitter section.

- Graphics Inspector
  - Add "3 Bitplane" mode. Requested by WizTom/Aggression.
  - Support using a user-defined memory address as the palette used for display.
    Requested by WizTom/Aggression.
  - Support live-update while CPU is running
  - Fixed several bugs in the X/Y tooltip mouseover when using Square Pixels mode.
    Reported by WizTom/Aggression.

- Memory View
  - Mouse wheel now moves a fixed proportion of the visible window, rather than the whole size.

- Launch Dialog
  - Added both upper and lower-cased filename extensions to selection dialog.

- General
  - Update Hatari codebase to version 2.4.1.
  - Add Launch/Quicklaunch/Reset/Fast-Forward toolbar and features.
  - Support (low frequency) Live update of Graphics Inspector and Register windows.
    Requested by Keith Clark.
  - Many more tooltips and keypress indicators on UI buttons.
  - Added the "-q/--quicklaunch" command line option to auto-start Hatari with the
    previously-saved Launch options.


v0.006 (February 2022)

- Hardware Window
  - Rewrite view to support Macs better
  - Show exception, interrupt, MFP vectors
  - Show some DMA sound registers
  - All addresses support right-click menus to e.g. open disassembly views at interrupt addresses
  - Add "copy to clipboard" button (for easier offline state comparison)
  - Add tooltips for most row types

- Memory Window
  - smarter handling of "S" (step) key when editing memory

- Main Window
  - Add "Shift+S" to skip over the current instruction without executing it
    (request from Troed/SYNC)

- Diassembly Window
  - Add "Set PC to here" right-click menu action
    (request from Troed/SYNC)

- Run Dialog
  - Support capitalized file extensions for executable (e.g. ".PRG" files as well as ".prg")

- Hatari (target runtime)
  - Fix display of many fields in Hardware view by making Hatari sync hardware register address data after stopping
    (e.g. Blitter register, video display counter)


v0.005 (December 2021)

- Disassembly view
  - Fix color settings with Mac Dark Theme. (reported by RATI/OVR)
  - New design for row highlighting. Suggested by RATI/OVR.
    - PC row is main highlight colours (usually white-on-blue for light themes)
    - Active Cursor row uses dashed lines
    - Mouseover row is a different background colour (palette "midlight" value)
  - Window limits movement of the address when Follow PC is active.
    - Code tries to keep the window static until PC moves out of visible range,
      this allows you to see the code around the PC in a more stable fashion.

- Memory Window
  - Fixed bug when Lock button is changed. If Lock was applied, window wouldn't re-fetch memory data because of a typo.
    (reported by RATI/OVR)
  - Fixed another bug with locked expressions.
      View was requesting memory for the window before register values arrived,
      so was always behind by a step.

- Graphics Inspector
  - Add "Save Image" right-click context menu item for easier sprite/gfx ripping.
    Image is saved as a palettised BMP or PNG using Qt's image libraries.
    (requested by Shazz/TRSI)

- General
  - New feature: support e.g. "D0.W" for sign-extended data registers when evaluating expressions.

- Hatari (Target runtime)
  - Fix crash bug in RemoteDebug.c's DebugOutput redirection handling.


v0.004 (November 2021)

- Hardware Window
  - Shows states of MMU, MFP, YM and Blitter in a readable form.
  - Still contains some bugs and missing register data.

- Disassembly view
  - Fix potential crash caused by branching arrows display


v0.003 (September 2021)

- Disassembly Window
  - Added lines between branch instruction and targets
  - Added mousewheel pageup/pagedown.

- Memory Window
  - Added mousewheel pageup/pagedown.

- General
  - Fixed: Focus for Step/Next/Until works when window is undocked.


v0.002 (September 2021)

- Memory View
  - Edit ASCII in Memory View.
  - Added tooltips for values, similar to Register view.
  - Added context menus to open the longword address under the mouse.
  - Symbol regions are now coloured for easier separation.
  - Fixed: crash from typing on the view when not connected.
  - Fixed: clicking on top row of characters didn't choose the row

- Disassembly Window
  - Ctrl+B works when 2 Disassembly windows are visible.

- Registers View
  - Fixed: listed ISP and USP are stale when CPU stops.

- Console View
  - Added output area to Console View so you can see the results of commands.

- General
  - Fixed: (N)ext would still step into instructions when holding down key-repeat (reported by
    Thomas van Noorden)
  - Alt+L now brings up the (L)aunch Hatari dialog, which was previously "Run Hatari"
  - Context menu "Show Address" options now include opening the Graphics Inspector


v0.001 (August 2021)

- Initial test release
